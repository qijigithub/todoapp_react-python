{"version":3,"sources":["logo.svg","Components/Card/Card.js","Components/Form/Form.js","Containers/TodoPage.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","listOfTodos","updateTodos","map","todo","List","ListItem","ListItemText","primary","content","ListItemSecondaryAction","IconButton","onClick","id","fetch","method","body","JSON","stringify","then","response","json","data","console","log","edge","aria-label","TodoForm","styled","form","Form","userInput","onFormChange","onFormSubmit","onSubmit","event","preventDefault","Box","width","style","display","textAlign","TextField","label","required","value","onChange","target","fullWidth","Button","variant","color","type","marginTop","TodoPage","useState","setTodo","addTodo","setAddTodo","useEffect","ok","getLastTodos","Container","maxWidth","Typography","gutterBottom","inputValue","headers","message","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea3d6b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst Card = (props) => {\n    const  {listOfTodos, updateTodos} = props;\n\n\n    const deleteTodo=(id)=>{\n        fetch(`/api/${id}`,{\n            method: 'POST',\n            body: JSON.stringify({\n            id:id\n            })\n        }).then(response=>response.json())\n            .then(data=>{\n                console.log(data)\n                updateTodos()\n            })\n    }\n\n\n\n    return (\n        <>\n        {\n          listOfTodos?listOfTodos.map(todo=>(\n                <List>\n                    <ListItem key={todo.id}>\n                    <ListItemText primary={todo.content} />\n                    <ListItemSecondaryAction>\n              <IconButton onClick={()=>deleteTodo(todo.id)} edge=\"end\" aria-label=\"comments\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n                </ListItem>\n                </List>\n            )):<div></div>\n        }\n        </>\n    )\n}\n\nexport default Card\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components';\nimport Box from '@material-ui/core/Box';\n\nconst Form = ({userInput,onFormChange,onFormSubmit}) => {\n    const handleChange =(event)=>{\n        onFormChange(event.target.value);\n    }\n    const handleSubmit =(event)=>{\n        event.preventDefault();\n        onFormSubmit();\n    }\n    return (\n        <TodoForm  onSubmit={handleSubmit}>\n            <Box  width=\"90%\" style={{display:'inline-block',textAlign:'center'}}>\n            <TextField  label=\"Input the task need to do\" required value={userInput} onChange={handleChange} fullWidth >\n            </TextField>\n            </Box>\n            <Button variant=\"outlined\" color=\"primary\" type = 'submit' style={{display:'inline-block',marginTop:'30px'}}>Submit</Button>\n        </TodoForm >\n\n    )\n}\n\nconst  TodoForm = styled.form`\npadding:2px;\n`\n\nexport default Form\n","import React,{useState,useEffect} from 'react';\nimport Card from '../Components/Card/Card';\nimport Form from '../Components/Form/Form';\nimport { Container, Typography  } from '@material-ui/core';\n\nconst TodoPage = () => {\n    const [todo,setTodo] = useState([]);\n    const [addTodo,setAddTodo] = useState('')\n    useEffect(() => {\n        fetch('/api').then(response=>{\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data=>setTodo(data))\n    },[])\n\n    const handleFormChange = (inputValue) => {\n        setAddTodo(inputValue);\n    }\n\n    const handleFormSubmit = ()=>{\n        fetch('/api/create',{\n            method:'POST',\n            body: JSON.stringify({\n                content: addTodo\n            }),\n            headers:{\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n        .then(message=>{\n            console.log(message)\n            setAddTodo('')\n            getLastTodos()\n        })\n    }\n\n    const updateTodos =()=>{\n        getLastTodos()\n    }\n\n    const getLastTodos = ()=>{\n        fetch('/api').then(response=>{\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data=>setTodo(data))\n    }\n    return (\n        <div>\n        <Container  maxWidth='md'>\n        <Typography variant=\"h2\"  gutterBottom>\n        To do list\n      </Typography>\n            <Form userInput={addTodo} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit}/>\n            <Card listOfTodos={todo} updateTodos={updateTodos}/>\n        </Container>\n        </div>\n    )\n}\n\nexport default TodoPage\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoPage from  './Containers/TodoPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}